# =============================================================================
# TrustDoc - Environment Variables Template
# =============================================================================
# Copy this file to .env.local and fill in your actual values
# NEVER commit .env.local to version control
#
# Setup: cp .env.example .env.local
# =============================================================================

# -----------------------------------------------------------------------------
# Node Environment
# -----------------------------------------------------------------------------
# Options: development, production, test
NODE_ENV=development

# -----------------------------------------------------------------------------
# App Configuration (CLIENT)
# -----------------------------------------------------------------------------
# Public URL of your application
# Local: http://localhost:3000
# Production: https://trustdoc.example.com
NEXT_PUBLIC_APP_URL=http://localhost:3000

# -----------------------------------------------------------------------------
# Supabase (DATABASE & AUTH)
# -----------------------------------------------------------------------------
# Get these from: https://supabase.com/dashboard/project/_/settings/api

# Public keys (CLIENT - safe to expose)
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Private key (SERVER - never expose to client!)
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Database URLs for Prisma
# Get from: https://supabase.com/dashboard/project/_/settings/database

# DATABASE_URL (POOLED - for runtime queries via pgBouncer)
# Use the "Transaction" pooler connection string with these query params:
# - pgbouncer=true: Enable pgBouncer mode
# - connection_limit=1: Limit to 1 connection per client (serverless best practice)
# - pool_timeout=5: Timeout after 5 seconds if no connection available
# - connect_timeout=5: Connection establishment timeout
# - sslmode=require: Force SSL encryption
# Format: postgresql://postgres.[PROJECT-REF]:[PASSWORD]@aws-0-[REGION].pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1&pool_timeout=5&connect_timeout=5&sslmode=require
DATABASE_URL=postgresql://postgres.your-project:your-password@aws-0-us-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1&pool_timeout=5&connect_timeout=5&sslmode=require

# SHADOW_DATABASE_URL (DIRECT - for migrations only, no pooling)
# Use the direct connection string (port 5432) for schema migrations
# Format: postgresql://postgres:[PASSWORD]@db.[PROJECT-REF].supabase.co:5432/postgres?sslmode=require
SHADOW_DATABASE_URL=postgresql://postgres:your-password@db.your-project.supabase.co:5432/postgres?sslmode=require

# -----------------------------------------------------------------------------
# NextAuth (AUTHENTICATION)
# -----------------------------------------------------------------------------
# URL where NextAuth is deployed (same as NEXT_PUBLIC_APP_URL in most cases)
NEXTAUTH_URL=http://localhost:3000

# Secret key for JWT encryption (generate with: openssl rand -base64 32)
# MUST be at least 32 characters
NEXTAUTH_SECRET=your-super-secret-key-min-32-chars-long-change-me

# -----------------------------------------------------------------------------
# OAuth Providers (AUTHENTICATION)
# -----------------------------------------------------------------------------
# Google OAuth credentials
# Get from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=123456789-abcdefghijklmnop.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=GOCSPX-your-secret-here

# -----------------------------------------------------------------------------
# Email Provider (SMTP for magic links)
# -----------------------------------------------------------------------------
# SMTP server configuration for sending authentication emails
# Common providers:
# - Gmail: smtp.gmail.com (port 587)
# - SendGrid: smtp.sendgrid.net (port 587)
# - Mailgun: smtp.mailgun.org (port 587)
# - AWS SES: email-smtp.region.amazonaws.com (port 587)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
EMAIL_FROM=noreply@trustdoc.app

# -----------------------------------------------------------------------------
# OpenAI (LLM / AI)
# -----------------------------------------------------------------------------
# OpenAI API key for GPT models
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-...

# Optional: Ollama base URL for local LLM (leave empty if not using)
# Example: http://localhost:11434
OLLAMA_BASE_URL=

# -----------------------------------------------------------------------------
# Stripe (PAYMENTS)
# -----------------------------------------------------------------------------
# Get from: https://dashboard.stripe.com/apikeys

# Public key (CLIENT - safe to expose)
NEXT_PUBLIC_STRIPE_PUBLIC_KEY=pk_test_...

# Private keys (SERVER - never expose to client!)
STRIPE_SECRET_KEY=sk_test_...
STRIPE_WEBHOOK_SECRET=whsec_...

# -----------------------------------------------------------------------------
# Rate Limiting (SECURITY)
# -----------------------------------------------------------------------------
# Window duration in seconds
RATE_LIMIT_WINDOW=60

# Maximum requests per window
RATE_LIMIT_MAX=10

# -----------------------------------------------------------------------------
# File Upload (STORAGE)
# -----------------------------------------------------------------------------
# Maximum file size in MB (for PDF uploads)
UPLOAD_MAX_SIZE_MB=10

# Allowed MIME types (comma-separated)
UPLOAD_ALLOWED_MIME_TYPES=application/pdf

# Mock storage mode (development only)
# Set to "true" to bypass Supabase and save files locally in ./temp/uploads/
# This is useful for local development without Supabase configuration
MOCK_STORAGE=false
